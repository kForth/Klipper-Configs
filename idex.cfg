# Definition for the secondary carriage and extruder1
[dual_carriage]
axis: x
step_pin: _STP4
dir_pin: !_DIR4
enable_pin: !_EN4
endstop_pin: !_STOP5
microsteps: 256
full_steps_per_rotation: 400
rotation_distance: 40  # GT2 20t
position_endstop: 0
position_min: -0.5
position_max: 410
homing_speed: 60

[tmc2209 dual_carriage]
uart_pin: _CS4
#diag_pin: _DIAG4
run_current: 0.800
stealthchop_threshold: 999999

# [tmc2130 dual_carriage]
# cs_pin: _CS4
# spi_bus: spi1
# # diag1_pin: _DIAG4
# run_current: 0.650
# stealthchop_threshold: 999999


# See extruders.cfg for E1

########################################
# GCode Macros
########################################

# Activate the left extruder
[gcode_macro T0]
gcode:
    {% if params.P|default(1) == 1 %}  
        PARK_{printer.toolhead.extruder}
    {% endif %}
    ACTIVATE_EXTRUDER EXTRUDER=extruder
    SET_DUAL_CARRIAGE CARRIAGE=0
    CARRIAGE_PRINT_FAN

# Activate the right extruder
[gcode_macro T1]
gcode:
    {% if params.P|default(1) == 1 %}  
        PARK_{printer.toolhead.extruder}
    {% endif %}
    ACTIVATE_EXTRUDER EXTRUDER=extruder1
    SET_DUAL_CARRIAGE CARRIAGE=1
    CARRIAGE_PRINT_FAN

# Helper script to park the carriage (called from T0 and T1 macros)
[gcode_macro PARK_extruder]
gcode:
    SAVE_GCODE_STATE NAME=park0
    G90
    G1 X470
    RESTORE_GCODE_STATE NAME=park0

[gcode_macro PARK_extruder1]
gcode:
    SAVE_GCODE_STATE NAME=park1
    G90
    G1 X0
    RESTORE_GCODE_STATE NAME=park1

# A helper script to activate copy mode
[gcode_macro ACTIVATE_COPY_MODE]
gcode:
    SET_DUAL_CARRIAGE CARRIAGE=0 MODE=PRIMARY
    G1 X{printer.toolhead.axis_maximum.x / 2}
    ACTIVATE_EXTRUDER EXTRUDER=extruder
    SET_DUAL_CARRIAGE CARRIAGE=1 MODE=PRIMARY
    G1 X{printer.toolhead.axis_minimum.x}
    SET_DUAL_CARRIAGE CARRIAGE=1 MODE=COPY
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder

# A helper script to activate mirror mode
[gcode_macro ACTIVATE_MIRROR_MODE]
gcode:
    # SET_DUAL_CARRIAGE CARRIAGE=0 MODE=PRIMARY
    T0 P0
    G1 X{printer.toolhead.axis_maximum.x}
    # ACTIVATE_EXTRUDER EXTRUDER=extruder
    # SET_DUAL_CARRIAGE CARRIAGE=1 MODE=PRIMARY
    T1 P0
    G1 X{printer.toolhead.axis_minimum.x}
    SET_DUAL_CARRIAGE CARRIAGE=1 MODE=MIRROR
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder

# Helper macros for carriage fans

[gcode_macro M106]
# rename_existing: M991.106
description: Override "M106" to allow multiple extruders.
gcode:
    {% set raw_speed = params.S | default(255) | float %}
    {% set fan_speed = (raw_speed / 255.0) | round(2) %} 

    {% if (params.P) is defined %}  
        {% set target_fan = params.P|int %}     
        {% set default_fan = [fan0, fan1][params.P|int] %}
        SET_FAN_SPEED FAN={default_fan} SPEED={fan_speed}
    {% else %}
        ### carriages print cooling FAN   
        CARRIAGE_PRINT_FAN SPEED={fan_speed}       
    {% endif %}

[gcode_macro M107]
description: Override "M107" to allow multiple extruders.
gcode:
    {% if (params.P) is defined %} 
      M106 S0 P{params.P}
    {% else %}
      M106 S0
    {% endif %}

[gcode_macro CARRIAGE_PRINT_FAN]
description: Set automatically the print fan speed for dual carriages modes
variable_fan0: 'fan0'  # generic_fan for T0
variable_fan1: 'fan1'  # generic_fan for T1
gcode:
    # Sync fan speeds in mirror or copy mode
    # {% if printer.toolhead.dual_carriage.mode in ('copy', 'mirror') %}
    #     # Get new or current fan speed
    #     {% if params.SPEED is defined %}
    #         {% set fan_speed = params.SPEED|float %}
    #     {% else %}
    #         {% set fan_speed = printer["fan_generic " + fan0].speed|float %}
    #     {% endif %}
        
    #     # Set fan speeds
    #     SET_FAN_SPEED FAN={fan0} SPEED={fan_speed}
    #     SET_FAN_SPEED FAN={fan1} SPEED={fan_speed}

    # # Set active extruder fan speed
    # {% else %}
        # Define active and inactive fans
        {% set active = {'extruder': 0, 'extruder1': 1}[printer['toolhead'].extruder] %}
        {% set active_fan = [fan0, fan1][active] %}
        {% set inactive_fan = [fan1, fan0][active] %}

        # Get new or current fan speed
        {% if params.SPEED is defined %}
            {% set fan_speed = params.SPEED|float %}
        {% else %}
        {% set active = {'extruder': 0, 'extruder1': 1}[printer['toolhead'].extruder] %}
            {% set fan_speed = printer["fan_generic " + inactive_fan].speed|float %}
        {% endif %}
        
        # Set fan speeds
        SET_FAN_SPEED FAN={active_fan} SPEED={fan_speed}
        SET_FAN_SPEED FAN={inactive_fan} SPEED=0
    # {% endif %}