# This file contains pin mappings and other printer configurations
# for SL's CreatBot F430 running on a BigTreeTech Octopus Pro motherboard.

# See docs/Config_Reference.md for a description of parameters.

[mcu]
# serial: /dev/serial/by-id/usb-Klipper_stm32f429xx_2D0023001651323039323733-if00  # Motherboard A
serial: /dev/serial/by-id/usb-Klipper_stm32f429xx_3A0034001651323039323733-if00  # Motherboard B

# [mcu mcu2]
# serial: /dev/serial/by-id/usb-1a86_USB2.0-Ser_-if00-port0  # Arduino UNO

[printer]
kinematics: cartesian
max_velocity: 110
max_accel: 2000
max_z_velocity: 20
max_z_accel: 100

[include pins.cfg]

[include steppers.cfg]

[include extruders.cfg]

[include heaters.cfg]

[include fans.cfg]

[idle_timeout]
timeout: 7200
#scale:

[pause_resume]

[gcode_arcs]

[respond]
default_type: echo

[exclude_object]

[display_status]

########################################
# Homing and Bed Mesh
########################################

[safe_z_home]
home_xy_position: 20, 20
speed: 80
z_hop: 15
z_hop_speed: 20

[bed_mesh]
speed: 100
horizontal_move_z: 7
mesh_min: 20, 20
mesh_max: 380, 280
probe_count: 6, 4

[bltouch]
sensor_pin: _BL_SNSR
control_pin: _BL_CTRL
x_offset: 36
z_offset: 72
z_offset: 3.3
#speed: 5
lift_speed: 20
#samples: 1

########################################
# Misc.
########################################

[temperature_sensor upper_chamber]
gcode_id: U
sensor_type: ATC Semitec 104GT-2
sensor_pin: _T0

# [temperature_sensor misc_1]
# gcode_id: B
# sensor_type: ATC Semitec 104GT-2
# sensor_pin: _T1

[temperature_sensor enclosure]
gcode_id: E
sensor_type: ATC Semitec 104GT-2
sensor_pin: _T2

# [neopixel rgb]
# pin: _RGB

# # [gcode_button pwr_det]
# # pin: _PWR_DET
# analog_range:
# #   Two comma separated resistances (in Ohms) specifying the minimum
# #   and maximum resistance range for the button. If analog_range is
# #   provided then the pin must be an analog capable pin. The default
# #   is to use digital gpio for the button.
# analog_pullup_resistor:
# #   The pullup resistance (in Ohms) when analog_range is specified.
# #   The default is 4700 ohms.
# press_gcode:
# #   A list of G-Code commands to execute when the button is pressed.
# #   G-Code templates are supported. This parameter must be provided.
# release_gcode:
# #   A list of G-Code commands to execute when the button is released.
# #   G-Code templates are supported. The default is to not run any
# #   commands on a button release.

#[output_pin ps_on]
#pin:
#   The pin to configure as an output. This parameter must be
#   provided.
#pwm: False
#   Set if the output pin should be capable of pulse-width-modulation.
#   If this is true, the value fields should be between 0 and 1; if it
#   is false the value fields should be either 0 or 1. The default is
#   False.
#static_value:
#   If this is set, then the pin is assigned to this value at startup
#   and the pin can not be changed during runtime. A static pin uses
#   slightly less ram in the micro-controller. The default is to use
#   runtime configuration of pins.
#value:
#   The value to initially set the pin to during MCU configuration.
#   The default is 0 (for low voltage).
#shutdown_value:
#   The value to set the pin to on an MCU shutdown event. The default
#   is 0 (for low voltage).
#maximum_mcu_duration:
#   The maximum duration a non-shutdown value may be driven by the MCU
#   without an acknowledge from the host.
#   If host can not keep up with an update, the MCU will shutdown
#   and set all pins to their respective shutdown values.
#   Default: 0 (disabled)
#   Usual values are around 5 seconds.
#cycle_time: 0.100
#   The amount of time (in seconds) per PWM cycle. It is recommended
#   this be 10 milliseconds or greater when using software based PWM.
#   The default is 0.100 seconds for pwm pins.
#hardware_pwm: False
#   Enable this to use hardware PWM instead of software PWM. When
#   using hardware PWM the actual cycle time is constrained by the
#   implementation and may be significantly different than the
#   requested cycle_time. The default is False.
#scale:
#   This parameter can be used to alter how the 'value' and
#   'shutdown_value' parameters are interpreted for pwm pins. If
#   provided, then the 'value' parameter should be between 0.0 and
#   'scale'. This may be useful when configuring a PWM pin that
#   controls a stepper voltage reference. The 'scale' can be set to
#   the equivalent stepper amperage if the PWM were fully enabled, and
#   then the 'value' parameter can be specified using the desired
#   amperage for the stepper. The default is to not scale the 'value'
#   parameter.


[include macros.cfg]